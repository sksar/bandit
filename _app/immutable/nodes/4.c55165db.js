import{S as Zl,i as en,s as tn,a as p,e as l,b as Ql,t as s,c as Ft,d,h as on,f as n,g as o,j as i,k as r,l as Rt,m as a,n as zt,o as u,p as t,q as Mt,r as Dt,u as Lt,v as Ot,w as Kl,x as an,y as Vl,z as sn,A as Hr}from"../chunks/index.5a1822b8.js";import{p as rn}from"../chunks/stores.341856e7.js";import{p as ln,r as Xl,a as nn}from"../chunks/stores.84469616.js";import{w as cn}from"../chunks/paths.edd62e39.js";import"../chunks/index.0c99c3d9.js";import{s as un,Q as pn,I as dn,C as fn}from"../chunks/buildQuery.b342377d.js";import"../chunks/VennDiagram.svelte_svelte_type_style_lang.a7320854.js";import{C as jt}from"../chunks/CodeBlock.0fd37152.js";function mn(E){return{c(){this.h()},l(W){this.h()},h(){document.title="Evidence"},m:Hr,p:Hr,d:Hr}}function hn(E){let W,T,P,Q,$,w,C,qt,mt,B,Vo,Ie,f,S,We,Ir,Xo,K,$e,Wr,Jo,V,Fe,$r,Gt,Re,Zo,Yt,F,ea,X,ta,oa,Qt,R,aa,J,sa,ra,Kt,g,la,Z,na,ia,ee,ca,ua,Vt,Me,pa,Xt,De,da,Jt,b,ht,fa,ma,wt,ha,wa,bt,ba,ka,te,ya,oe,va,_a,Zt,Le,Ea,eo,m,ae,Ta,se,Pa,ga,xa,Oe,Aa,re,Ca,Ba,je,Sa,le,Ha,Ia,M,Wa,ne,$a,Fa,ie,Ra,Ma,k,Da,ce,La,Oa,ue,ja,qa,pe,Ua,Na,de,za,Ga,qe,Ya,D,Qa,Fr="3",Ka,Va,_,Xa,fe,Ja,Za,me,es,ts,he,os,as,ss,kt,rs,to,L,ls,we,ns,is,oo,Ue,cs,ao,Ne,us,so,ze,ps,ro,x,be,ke,ds,yt,fs,ms,hs,Ge,ws,ye,H,bs,vt,ks,ys,_t,vs,_s,Es,Ye,Ts,Et,I,Ps,Tt,gs,xs,ve,As,Cs,lo,Qe,Bs,no,O,Ss,Pt,Hs,Is,io,Ke,co,j,Ws,gt,$s,Fs,uo,Ve,po,Xe,Rs,fo,q,Ms,_e,xt,Ds,Ls,mo,Je,Os,ho,Ze,js,wo,et,bo,tt,qs,ko,ot,Us,yo,A,Ns,Ee,zs,Gs,Te,Ys,Qs,vo,at,Ks,_o,y,Vs,st,Xs,Js,rt,Zs,er,lt,tr,or,Eo,U,ar,nt,sr,rr,To,it,lr,Po,ct,nr,go,N,ir,Pe,cr,ur,xo,z,pr,ge,dr,fr,Ao,ut,mr,Co,v,hr,xe,wr,br,At,kr,yr,Ct,vr,_r,Bo,pt,So,G,Er,Ae,Tr,Pr,Ho,dt,gr,Io,ft,xr,Wo;function Jl(e,c){return mn}let Ut=Jl()(E);return Ge=new jt({props:{source:'{:bandit, "~> 1.0"}',copyToClipboard:"true"}}),Ye=new jt({props:{source:`# config/config.exs

config :your_app, YourAppWeb.Endpoint,
  adapter: Bandit.PhoenixAdapter, # <---- ADD THIS LINE
  url: [host: "localhost"],
  render_errors: ...`,copyToClipboard:"true"}}),Ke=new jt({props:{source:`# lib/my_app/application.ex

defmodule MyApp.Application do
  use Application

  def start(_type, _args) do
    children = [
      {Bandit, plug: MyApp.MyPlug}
    ]

    opts = [strategy: :one_for_one, name: MyApp.Supervisor]
    Supervisor.start_link(children, opts)
  end
end`,copyToClipboard:"true"}}),Ve=new jt({props:{source:`# Start an http server on the default port 4000, serving MyApp.MyPlug
Bandit.start_link(plug: MyPlug)`,copyToClipboard:"true"}}),et=new jt({props:{source:`# lib/my_app/application.ex

defmodule MyApp.Application do
  use Application

  def start(_type, _args) do
    children = [
      {Bandit,
       plug: MyApp.MyPlug,
       scheme: :https,
       certfile: "/absolute/path/to/cert.pem",
       keyfile: "/absolute/path/to/key.pem"}
    ]

    opts = [strategy: :one_for_one, name: MyApp.Supervisor]
    Supervisor.start_link(children, opts)
  end
end`,copyToClipboard:"true"}}),pt=new jt({props:{source:`def deps do
  [
    {:bandit, "~> 1.0"}
  ]
end`,copyToClipboard:"true"}}),{c(){W=p(),Ut.c(),T=l("meta"),P=l("meta"),Q=Ql(),$=p(),w=l("p"),C=l("img"),mt=p(),B=l("img"),Ie=p(),f=l("p"),S=l("a"),We=l("img"),Xo=p(),K=l("a"),$e=l("img"),Jo=p(),V=l("a"),Fe=l("img"),Gt=p(),Re=l("p"),Zo=s("Bandit is an HTTP server for Plug and WebSock apps."),Yt=p(),F=l("p"),ea=s("Bandit is written entirely in Elixir and is built atop "),X=l("a"),ta=s(`Thousand
Island`),oa=s(`. It can serve HTTP/1.x,
HTTP/2 and WebSocket clients over both HTTP and HTTPS. It is written with
correctness, clarity & performance as fundamental goals.`),Qt=p(),R=l("p"),aa=s("In "),J=l("a"),sa=s(`ongoing automated performance
tests`),ra=s(`,
Bandit's HTTP/1.x engine is up to 4x faster than Cowboy depending on the number of concurrent
requests. When comparing HTTP/2 performance, Bandit is up to 1.5x faster than Cowboy. This is
possible because Bandit has been built from the ground up for use with Plug applications; this
focus pays dividends in both performance and also in the approachability of the code base.`),Kt=p(),g=l("p"),la=s(`Bandit also emphasizes correctness. Its HTTP/2 implementation scores 100% on the
`),Z=l("a"),na=s("h2spec"),ia=s(` suite in strict mode, and its
WebSocket implementation scores 100% on the
`),ee=l("a"),ca=s("Autobahn"),ua=s(` test suite, both of
which run as part of Bandit's comprehensive CI suite. Extensive unit test,
credo, dialyzer, and performance regression test coverage round out a test suite
that ensures that Bandit is and will remain a platform you can count on.`),Vt=p(),Me=l("p"),pa=s(`Lastly, Bandit exists to demystify the lower layers of infrastructure code. In a world where
The New Thing is nearly always adding abstraction on top of abstraction, it's important to have
foundational work that is approachable & understandable by users above it in the stack.`),Xt=p(),De=l("h2"),da=s("Project Goals"),Jt=p(),b=l("ul"),ht=l("li"),fa=s(`Implement comprehensive support for HTTP/1.0 through HTTP/2 & WebSockets (and
beyond) backed by obsessive RFC literacy and automated conformance testing`),ma=p(),wt=l("li"),ha=s(`Aim for minimal internal policy and HTTP-level configuration. Delegate to Plug & WebSock as much as
possible, and only interpret requests to the extent necessary to safely manage a connection
& fulfill the requirements of safely supporting protocol correctness`),wa=p(),bt=l("li"),ba=s(`Prioritize (in order): correctness, clarity, performance. Seek to remove the mystery of
infrastructure code by being approachable and easy to understand`),ka=p(),te=l("li"),ya=s("Along with our companion library "),oe=l("a"),va=s(`Thousand
Island`),_a=s(`, become the go-to HTTP
& low-level networking stack of choice for the Elixir community by being
reliable, efficient, and approachable`),Zt=p(),Le=l("h2"),Ea=s("Project Status"),eo=p(),m=l("ul"),ae=l("li"),Ta=s("Complete support for "),se=l("a"),Pa=s("Phoenix"),ga=s(` applications (WebSocket
support requires Phoenix 1.7+)`),xa=p(),Oe=l("li"),Aa=s("Complete support of the "),re=l("a"),Ca=s("Plug API"),Ba=p(),je=l("li"),Sa=s("Complete support of the "),le=l("a"),Ha=s("WebSock API"),Ia=p(),M=l("li"),Wa=s("Complete server support for HTTP/1.x as defined in "),ne=l("a"),$a=s(`RFC
9112`),Fa=s(" & "),ie=l("a"),Ra=s(`RFC
9110`),Ma=p(),k=l("li"),Da=s("Complete server support for HTTP/2 as defined in "),ce=l("a"),La=s(`RFC
9113`),Oa=s(" & "),ue=l("a"),ja=s(`RFC
9110`),qa=s(`, comprehensively covered
by automated `),pe=l("a"),Ua=s("h2spec"),Na=s(` conformance
testing. Though deprecated by later RFCs, Bandit also supports h2c upgrades as
specified in `),de=l("a"),za=s("RFC7540"),Ga=p(),qe=l("li"),Ya=s(`Support for HTTP content encoding compression on both HTTP/1.x and HTTP/2.
gzip and deflate methods are supported per
`),D=l("a"),Qa=s("RFC9110ยง8.4.1."),Ka=s(Fr),Va=p(),_=l("li"),Xa=s("Complete server support for WebSockets as defined in "),fe=l("a"),Ja=s(`RFC
6455`),Za=s(`, comprehensively covered by automated
`),me=l("a"),es=s("Autobahn"),ts=s(` conformance testing. Per-message
compression as defined in `),he=l("a"),os=s("RFC 7692"),as=s(` is also
supported`),ss=p(),kt=l("li"),rs=s(`Extremely scalable and performant client handling at a rate up to 4x that of Cowboy for the same
workload with as-good-or-better memory use`),to=p(),L=l("p"),ls=s(`Any Phoenix or Plug app should work with Bandit as a drop-in replacement for
Cowboy; exceptions to this are errors (if you find one, please `),we=l("a"),ns=s(`file an
issue!`),is=s(")."),oo=p(),Ue=l("h2"),cs=s("Using Bandit With Phoenix"),ao=p(),Ne=l("p"),us=s(`Bandit fully supports Phoenix. Phoenix applications which use WebSockets for
features such as Channels or LiveView require Phoenix 1.7 or later.`),so=p(),ze=l("p"),ps=s("Using Bandit to host your Phoenix application couldn't be simpler:"),ro=p(),x=l("ol"),be=l("li"),ke=l("p"),ds=s("Add Bandit as a dependency in your Phoenix application's "),yt=l("code"),fs=s("mix.exs"),ms=s(":"),hs=p(),Ft(Ge.$$.fragment),ws=p(),ye=l("li"),H=l("p"),bs=s("Add the following "),vt=l("code"),ks=s("adapter:"),ys=s(" line to your endpoint configuration in "),_t=l("code"),vs=s("config/config.exs"),_s=s(", as in the following example:"),Es=p(),Ft(Ye.$$.fragment),Ts=p(),Et=l("li"),I=l("p"),Ps=s("That's it! "),Tt=l("strong"),gs=s(`You should now see messages at startup indicating that Phoenix is
using Bandit to serve your endpoint`),xs=s(`, and everything should 'just work'. Note
that if you have set any exotic configuration options within your endpoint,
you may need to update that configuration to work with Bandit; see the
`),ve=l("a"),As=s("Bandit.PhoenixAdapter"),Cs=s(`
documentation for more information.`),lo=p(),Qe=l("h2"),Bs=s("Using Bandit With Plug Applications"),no=p(),O=l("p"),Ss=s(`Using Bandit to host your own Plug is very straightforward. Assuming you have
a Plug module implemented already, you can host it within Bandit by adding
something similar to the following to your application's `),Pt=l("code"),Hs=s("Application.start/2"),Is=s(`
function:`),io=p(),Ft(Ke.$$.fragment),co=p(),j=l("p"),Ws=s(`For less formal usage, you can also start Bandit using the same configuration
options via the `),gt=l("code"),$s=s("Bandit.start_link/1"),Fs=s(" function:"),uo=p(),Ft(Ve.$$.fragment),po=p(),Xe=l("h2"),Rs=s("Configuration"),fo=p(),q=l("p"),Ms=s(`A number of options are defined when starting a server. The complete list is
defined by the `),_e=l("a"),xt=l("code"),Ds=s("t:Bandit.options/0"),Ls=s(" type."),mo=p(),Je=l("h2"),Os=s("Setting up an HTTPS Server"),ho=p(),Ze=l("p"),js=s(`By far the most common stumbling block encountered when setting up an HTTPS
server involves configuring key and certificate data. Bandit is comparatively
easy to set up in this regard, with a working example looking similar to the
following:`),wo=p(),Ft(et.$$.fragment),bo=p(),tt=l("h2"),qs=s("WebSocket Support"),ko=p(),ot=l("p"),Us=s(`If you're using Bandit to run a Phoenix application as suggested above, there is
nothing more for you to do; WebSocket support will 'just work'.`),yo=p(),A=l("p"),Ns=s(`If you wish to interact with WebSockets at a more fundamental level, the
`),Ee=l("a"),zs=s("WebSock"),Gs=s(` and
`),Te=l("a"),Ys=s("WebSockAdapter"),Qs=s(` libraries
provides a generic abstraction for WebSockets (very similar to how Plug is
a generic abstraction on top of HTTP). Bandit fully supports all aspects of
these libraries.`),vo=p(),at=l("h2"),Ks=s("Implementation Details"),_o=p(),y=l("p"),Vs=s(`Bandit primarily consists of three protocol-specific implementations, one each
for `),st=l("a"),Xs=s("HTTP/1"),Js=s(", "),rt=l("a"),Zs=s("HTTP/2"),er=s(" and "),lt=l("a"),tr=s("WebSockets"),or=s(`. Each of these implementations is
largely distinct from one another, and is described in its own README linked
above.`),Eo=p(),U=l("p"),ar=s(`If you're just taking a casual look at Bandit or trying to understand how an
HTTP server works, the `),nt=l("a"),sr=s("HTTP/1"),rr=s(` implementation is likely the best place to
start exploring.`),To=p(),it=l("h2"),lr=s("Contributing"),Po=p(),ct=l("p"),nr=s(`Contributions to Bandit are very much welcome! Before undertaking any substantial work, please
open an issue on the project to discuss ideas and planned approaches so we can ensure we keep
progress moving in the same direction.`),go=p(),N=l("p"),ir=s("All contributors must agree and adhere to the project's "),Pe=l("a"),cr=s(`Code of
Conduct`),ur=s("."),xo=p(),z=l("p"),pr=s("Security disclosures should be handled per Bandit's published "),ge=l("a"),dr=s("security policy"),fr=s("."),Ao=p(),ut=l("h2"),mr=s("Installation"),Co=p(),v=l("p"),hr=s("Bandit is "),xe=l("a"),wr=s("available in Hex"),br=s(`. The package can be installed
by adding `),At=l("code"),kr=s("bandit"),yr=s(" to your list of dependencies in "),Ct=l("code"),vr=s("mix.exs"),_r=s(":"),Bo=p(),Ft(pt.$$.fragment),So=p(),G=l("p"),Er=s("Documentation can be found at "),Ae=l("a"),Tr=s("https://hexdocs.pm/bandit"),Pr=s("."),Ho=p(),dt=l("h1"),gr=s("License"),Io=p(),ft=l("p"),xr=s("MIT"),this.h()},l(e){W=d(e);const c=on("svelte-1j2izld",document.head);Ut.l(c),T=n(c,"META",{name:!0,content:!0}),P=n(c,"META",{name:!0,content:!0}),Q=Ql(),c.forEach(o),$=d(e),w=n(e,"P",{class:!0});var $o=i(w);C=n($o,"IMG",{src:!0,alt:!0,class:!0}),mt=d($o),B=n($o,"IMG",{src:!0,alt:!0,class:!0}),$o.forEach(o),Ie=d(e),f=n(e,"P",{class:!0});var Bt=i(f);S=n(Bt,"A",{href:!0,rel:!0,class:!0});var Rr=i(S);We=n(Rr,"IMG",{src:!0,alt:!0,class:!0}),Rr.forEach(o),Xo=d(Bt),K=n(Bt,"A",{href:!0,rel:!0,class:!0});var Mr=i(K);$e=n(Mr,"IMG",{src:!0,alt:!0,class:!0}),Mr.forEach(o),Jo=d(Bt),V=n(Bt,"A",{href:!0,rel:!0,class:!0});var Dr=i(V);Fe=n(Dr,"IMG",{src:!0,alt:!0,class:!0}),Dr.forEach(o),Bt.forEach(o),Gt=d(e),Re=n(e,"P",{class:!0});var Lr=i(Re);Zo=r(Lr,"Bandit is an HTTP server for Plug and WebSock apps."),Lr.forEach(o),Yt=d(e),F=n(e,"P",{class:!0});var Fo=i(F);ea=r(Fo,"Bandit is written entirely in Elixir and is built atop "),X=n(Fo,"A",{href:!0,rel:!0,class:!0});var Or=i(X);ta=r(Or,`Thousand
Island`),Or.forEach(o),oa=r(Fo,`. It can serve HTTP/1.x,
HTTP/2 and WebSocket clients over both HTTP and HTTPS. It is written with
correctness, clarity & performance as fundamental goals.`),Fo.forEach(o),Qt=d(e),R=n(e,"P",{class:!0});var Ro=i(R);aa=r(Ro,"In "),J=n(Ro,"A",{href:!0,rel:!0,class:!0});var jr=i(J);sa=r(jr,`ongoing automated performance
tests`),jr.forEach(o),ra=r(Ro,`,
Bandit's HTTP/1.x engine is up to 4x faster than Cowboy depending on the number of concurrent
requests. When comparing HTTP/2 performance, Bandit is up to 1.5x faster than Cowboy. This is
possible because Bandit has been built from the ground up for use with Plug applications; this
focus pays dividends in both performance and also in the approachability of the code base.`),Ro.forEach(o),Kt=d(e),g=n(e,"P",{class:!0});var St=i(g);la=r(St,`Bandit also emphasizes correctness. Its HTTP/2 implementation scores 100% on the
`),Z=n(St,"A",{href:!0,rel:!0,class:!0});var qr=i(Z);na=r(qr,"h2spec"),qr.forEach(o),ia=r(St,` suite in strict mode, and its
WebSocket implementation scores 100% on the
`),ee=n(St,"A",{href:!0,rel:!0,class:!0});var Ur=i(ee);ca=r(Ur,"Autobahn"),Ur.forEach(o),ua=r(St,` test suite, both of
which run as part of Bandit's comprehensive CI suite. Extensive unit test,
credo, dialyzer, and performance regression test coverage round out a test suite
that ensures that Bandit is and will remain a platform you can count on.`),St.forEach(o),Vt=d(e),Me=n(e,"P",{class:!0});var Nr=i(Me);pa=r(Nr,`Lastly, Bandit exists to demystify the lower layers of infrastructure code. In a world where
The New Thing is nearly always adding abstraction on top of abstraction, it's important to have
foundational work that is approachable & understandable by users above it in the stack.`),Nr.forEach(o),Xt=d(e),De=n(e,"H2",{class:!0});var zr=i(De);da=r(zr,"Project Goals"),zr.forEach(o),Jt=d(e),b=n(e,"UL",{class:!0});var Ce=i(b);ht=n(Ce,"LI",{class:!0});var Gr=i(ht);fa=r(Gr,`Implement comprehensive support for HTTP/1.0 through HTTP/2 & WebSockets (and
beyond) backed by obsessive RFC literacy and automated conformance testing`),Gr.forEach(o),ma=d(Ce),wt=n(Ce,"LI",{class:!0});var Yr=i(wt);ha=r(Yr,`Aim for minimal internal policy and HTTP-level configuration. Delegate to Plug & WebSock as much as
possible, and only interpret requests to the extent necessary to safely manage a connection
& fulfill the requirements of safely supporting protocol correctness`),Yr.forEach(o),wa=d(Ce),bt=n(Ce,"LI",{class:!0});var Qr=i(bt);ba=r(Qr,`Prioritize (in order): correctness, clarity, performance. Seek to remove the mystery of
infrastructure code by being approachable and easy to understand`),Qr.forEach(o),ka=d(Ce),te=n(Ce,"LI",{class:!0});var Mo=i(te);ya=r(Mo,"Along with our companion library "),oe=n(Mo,"A",{href:!0,rel:!0,class:!0});var Kr=i(oe);va=r(Kr,`Thousand
Island`),Kr.forEach(o),_a=r(Mo,`, become the go-to HTTP
& low-level networking stack of choice for the Elixir community by being
reliable, efficient, and approachable`),Mo.forEach(o),Ce.forEach(o),Zt=d(e),Le=n(e,"H2",{class:!0});var Vr=i(Le);Ea=r(Vr,"Project Status"),Vr.forEach(o),eo=d(e),m=n(e,"UL",{class:!0});var h=i(m);ae=n(h,"LI",{class:!0});var Do=i(ae);Ta=r(Do,"Complete support for "),se=n(Do,"A",{href:!0,rel:!0,class:!0});var Xr=i(se);Pa=r(Xr,"Phoenix"),Xr.forEach(o),ga=r(Do,` applications (WebSocket
support requires Phoenix 1.7+)`),Do.forEach(o),xa=d(h),Oe=n(h,"LI",{class:!0});var Ar=i(Oe);Aa=r(Ar,"Complete support of the "),re=n(Ar,"A",{href:!0,rel:!0,class:!0});var Jr=i(re);Ca=r(Jr,"Plug API"),Jr.forEach(o),Ar.forEach(o),Ba=d(h),je=n(h,"LI",{class:!0});var Cr=i(je);Sa=r(Cr,"Complete support of the "),le=n(Cr,"A",{href:!0,rel:!0,class:!0});var Zr=i(le);Ha=r(Zr,"WebSock API"),Zr.forEach(o),Cr.forEach(o),Ia=d(h),M=n(h,"LI",{class:!0});var Nt=i(M);Wa=r(Nt,"Complete server support for HTTP/1.x as defined in "),ne=n(Nt,"A",{href:!0,rel:!0,class:!0});var el=i(ne);$a=r(el,`RFC
9112`),el.forEach(o),Fa=r(Nt," & "),ie=n(Nt,"A",{href:!0,rel:!0,class:!0});var tl=i(ie);Ra=r(tl,`RFC
9110`),tl.forEach(o),Nt.forEach(o),Ma=d(h),k=n(h,"LI",{class:!0});var Y=i(k);Da=r(Y,"Complete server support for HTTP/2 as defined in "),ce=n(Y,"A",{href:!0,rel:!0,class:!0});var ol=i(ce);La=r(ol,`RFC
9113`),ol.forEach(o),Oa=r(Y," & "),ue=n(Y,"A",{href:!0,rel:!0,class:!0});var al=i(ue);ja=r(al,`RFC
9110`),al.forEach(o),qa=r(Y,`, comprehensively covered
by automated `),pe=n(Y,"A",{href:!0,rel:!0,class:!0});var sl=i(pe);Ua=r(sl,"h2spec"),sl.forEach(o),Na=r(Y,` conformance
testing. Though deprecated by later RFCs, Bandit also supports h2c upgrades as
specified in `),de=n(Y,"A",{href:!0,rel:!0,class:!0});var rl=i(de);za=r(rl,"RFC7540"),rl.forEach(o),Y.forEach(o),Ga=d(h),qe=n(h,"LI",{class:!0});var Br=i(qe);Ya=r(Br,`Support for HTTP content encoding compression on both HTTP/1.x and HTTP/2.
gzip and deflate methods are supported per
`),D=n(Br,"A",{href:!0,rel:!0,class:!0});var Sr=i(D);Qa=r(Sr,"RFC9110ยง8.4.1."),Ka=r(Sr,Fr),Sr.forEach(o),Br.forEach(o),Va=d(h),_=n(h,"LI",{class:!0});var Be=i(_);Xa=r(Be,"Complete server support for WebSockets as defined in "),fe=n(Be,"A",{href:!0,rel:!0,class:!0});var ll=i(fe);Ja=r(ll,`RFC
6455`),ll.forEach(o),Za=r(Be,`, comprehensively covered by automated
`),me=n(Be,"A",{href:!0,rel:!0,class:!0});var nl=i(me);es=r(nl,"Autobahn"),nl.forEach(o),ts=r(Be,` conformance testing. Per-message
compression as defined in `),he=n(Be,"A",{href:!0,rel:!0,class:!0});var il=i(he);os=r(il,"RFC 7692"),il.forEach(o),as=r(Be,` is also
supported`),Be.forEach(o),ss=d(h),kt=n(h,"LI",{class:!0});var cl=i(kt);rs=r(cl,`Extremely scalable and performant client handling at a rate up to 4x that of Cowboy for the same
workload with as-good-or-better memory use`),cl.forEach(o),h.forEach(o),to=d(e),L=n(e,"P",{class:!0});var Lo=i(L);ls=r(Lo,`Any Phoenix or Plug app should work with Bandit as a drop-in replacement for
Cowboy; exceptions to this are errors (if you find one, please `),we=n(Lo,"A",{href:!0,rel:!0,class:!0});var ul=i(we);ns=r(ul,`file an
issue!`),ul.forEach(o),is=r(Lo,")."),Lo.forEach(o),oo=d(e),Ue=n(e,"H2",{class:!0});var pl=i(Ue);cs=r(pl,"Using Bandit With Phoenix"),pl.forEach(o),ao=d(e),Ne=n(e,"P",{class:!0});var dl=i(Ne);us=r(dl,`Bandit fully supports Phoenix. Phoenix applications which use WebSockets for
features such as Channels or LiveView require Phoenix 1.7 or later.`),dl.forEach(o),so=d(e),ze=n(e,"P",{class:!0});var fl=i(ze);ps=r(fl,"Using Bandit to host your Phoenix application couldn't be simpler:"),fl.forEach(o),ro=d(e),x=n(e,"OL",{class:!0});var Ht=i(x);be=n(Ht,"LI",{class:!0});var Oo=i(be);ke=n(Oo,"P",{class:!0});var jo=i(ke);ds=r(jo,"Add Bandit as a dependency in your Phoenix application's "),yt=n(jo,"CODE",{class:!0});var ml=i(yt);fs=r(ml,"mix.exs"),ml.forEach(o),ms=r(jo,":"),jo.forEach(o),hs=d(Oo),Rt(Ge.$$.fragment,Oo),Oo.forEach(o),ws=d(Ht),ye=n(Ht,"LI",{class:!0});var qo=i(ye);H=n(qo,"P",{class:!0});var It=i(H);bs=r(It,"Add the following "),vt=n(It,"CODE",{class:!0});var hl=i(vt);ks=r(hl,"adapter:"),hl.forEach(o),ys=r(It," line to your endpoint configuration in "),_t=n(It,"CODE",{class:!0});var wl=i(_t);vs=r(wl,"config/config.exs"),wl.forEach(o),_s=r(It,", as in the following example:"),It.forEach(o),Es=d(qo),Rt(Ye.$$.fragment,qo),qo.forEach(o),Ts=d(Ht),Et=n(Ht,"LI",{class:!0});var bl=i(Et);I=n(bl,"P",{class:!0});var Wt=i(I);Ps=r(Wt,"That's it! "),Tt=n(Wt,"STRONG",{class:!0});var kl=i(Tt);gs=r(kl,`You should now see messages at startup indicating that Phoenix is
using Bandit to serve your endpoint`),kl.forEach(o),xs=r(Wt,`, and everything should 'just work'. Note
that if you have set any exotic configuration options within your endpoint,
you may need to update that configuration to work with Bandit; see the
`),ve=n(Wt,"A",{href:!0,rel:!0,class:!0});var yl=i(ve);As=r(yl,"Bandit.PhoenixAdapter"),yl.forEach(o),Cs=r(Wt,`
documentation for more information.`),Wt.forEach(o),bl.forEach(o),Ht.forEach(o),lo=d(e),Qe=n(e,"H2",{class:!0});var vl=i(Qe);Bs=r(vl,"Using Bandit With Plug Applications"),vl.forEach(o),no=d(e),O=n(e,"P",{class:!0});var Uo=i(O);Ss=r(Uo,`Using Bandit to host your own Plug is very straightforward. Assuming you have
a Plug module implemented already, you can host it within Bandit by adding
something similar to the following to your application's `),Pt=n(Uo,"CODE",{class:!0});var _l=i(Pt);Hs=r(_l,"Application.start/2"),_l.forEach(o),Is=r(Uo,`
function:`),Uo.forEach(o),io=d(e),Rt(Ke.$$.fragment,e),co=d(e),j=n(e,"P",{class:!0});var No=i(j);Ws=r(No,`For less formal usage, you can also start Bandit using the same configuration
options via the `),gt=n(No,"CODE",{class:!0});var El=i(gt);$s=r(El,"Bandit.start_link/1"),El.forEach(o),Fs=r(No," function:"),No.forEach(o),uo=d(e),Rt(Ve.$$.fragment,e),po=d(e),Xe=n(e,"H2",{class:!0});var Tl=i(Xe);Rs=r(Tl,"Configuration"),Tl.forEach(o),fo=d(e),q=n(e,"P",{class:!0});var zo=i(q);Ms=r(zo,`A number of options are defined when starting a server. The complete list is
defined by the `),_e=n(zo,"A",{href:!0,rel:!0,class:!0});var Pl=i(_e);xt=n(Pl,"CODE",{class:!0});var gl=i(xt);Ds=r(gl,"t:Bandit.options/0"),gl.forEach(o),Pl.forEach(o),Ls=r(zo," type."),zo.forEach(o),mo=d(e),Je=n(e,"H2",{class:!0});var xl=i(Je);Os=r(xl,"Setting up an HTTPS Server"),xl.forEach(o),ho=d(e),Ze=n(e,"P",{class:!0});var Al=i(Ze);js=r(Al,`By far the most common stumbling block encountered when setting up an HTTPS
server involves configuring key and certificate data. Bandit is comparatively
easy to set up in this regard, with a working example looking similar to the
following:`),Al.forEach(o),wo=d(e),Rt(et.$$.fragment,e),bo=d(e),tt=n(e,"H2",{class:!0});var Cl=i(tt);qs=r(Cl,"WebSocket Support"),Cl.forEach(o),ko=d(e),ot=n(e,"P",{class:!0});var Bl=i(ot);Us=r(Bl,`If you're using Bandit to run a Phoenix application as suggested above, there is
nothing more for you to do; WebSocket support will 'just work'.`),Bl.forEach(o),yo=d(e),A=n(e,"P",{class:!0});var $t=i(A);Ns=r($t,`If you wish to interact with WebSockets at a more fundamental level, the
`),Ee=n($t,"A",{href:!0,rel:!0,class:!0});var Sl=i(Ee);zs=r(Sl,"WebSock"),Sl.forEach(o),Gs=r($t,` and
`),Te=n($t,"A",{href:!0,rel:!0,class:!0});var Hl=i(Te);Ys=r(Hl,"WebSockAdapter"),Hl.forEach(o),Qs=r($t,` libraries
provides a generic abstraction for WebSockets (very similar to how Plug is
a generic abstraction on top of HTTP). Bandit fully supports all aspects of
these libraries.`),$t.forEach(o),vo=d(e),at=n(e,"H2",{class:!0});var Il=i(at);Ks=r(Il,"Implementation Details"),Il.forEach(o),_o=d(e),y=n(e,"P",{class:!0});var Se=i(y);Vs=r(Se,`Bandit primarily consists of three protocol-specific implementations, one each
for `),st=n(Se,"A",{href:!0,class:!0});var Wl=i(st);Xs=r(Wl,"HTTP/1"),Wl.forEach(o),Js=r(Se,", "),rt=n(Se,"A",{href:!0,class:!0});var $l=i(rt);Zs=r($l,"HTTP/2"),$l.forEach(o),er=r(Se," and "),lt=n(Se,"A",{href:!0,class:!0});var Fl=i(lt);tr=r(Fl,"WebSockets"),Fl.forEach(o),or=r(Se,`. Each of these implementations is
largely distinct from one another, and is described in its own README linked
above.`),Se.forEach(o),Eo=d(e),U=n(e,"P",{class:!0});var Go=i(U);ar=r(Go,`If you're just taking a casual look at Bandit or trying to understand how an
HTTP server works, the `),nt=n(Go,"A",{href:!0,class:!0});var Rl=i(nt);sr=r(Rl,"HTTP/1"),Rl.forEach(o),rr=r(Go,` implementation is likely the best place to
start exploring.`),Go.forEach(o),To=d(e),it=n(e,"H2",{class:!0});var Ml=i(it);lr=r(Ml,"Contributing"),Ml.forEach(o),Po=d(e),ct=n(e,"P",{class:!0});var Dl=i(ct);nr=r(Dl,`Contributions to Bandit are very much welcome! Before undertaking any substantial work, please
open an issue on the project to discuss ideas and planned approaches so we can ensure we keep
progress moving in the same direction.`),Dl.forEach(o),go=d(e),N=n(e,"P",{class:!0});var Yo=i(N);ir=r(Yo,"All contributors must agree and adhere to the project's "),Pe=n(Yo,"A",{href:!0,rel:!0,class:!0});var Ll=i(Pe);cr=r(Ll,`Code of
Conduct`),Ll.forEach(o),ur=r(Yo,"."),Yo.forEach(o),xo=d(e),z=n(e,"P",{class:!0});var Qo=i(z);pr=r(Qo,"Security disclosures should be handled per Bandit's published "),ge=n(Qo,"A",{href:!0,rel:!0,class:!0});var Ol=i(ge);dr=r(Ol,"security policy"),Ol.forEach(o),fr=r(Qo,"."),Qo.forEach(o),Ao=d(e),ut=n(e,"H2",{class:!0});var jl=i(ut);mr=r(jl,"Installation"),jl.forEach(o),Co=d(e),v=n(e,"P",{class:!0});var He=i(v);hr=r(He,"Bandit is "),xe=n(He,"A",{href:!0,rel:!0,class:!0});var ql=i(xe);wr=r(ql,"available in Hex"),ql.forEach(o),br=r(He,`. The package can be installed
by adding `),At=n(He,"CODE",{class:!0});var Ul=i(At);kr=r(Ul,"bandit"),Ul.forEach(o),yr=r(He," to your list of dependencies in "),Ct=n(He,"CODE",{class:!0});var Nl=i(Ct);vr=r(Nl,"mix.exs"),Nl.forEach(o),_r=r(He,":"),He.forEach(o),Bo=d(e),Rt(pt.$$.fragment,e),So=d(e),G=n(e,"P",{class:!0});var Ko=i(G);Er=r(Ko,"Documentation can be found at "),Ae=n(Ko,"A",{href:!0,rel:!0,class:!0});var zl=i(Ae);Tr=r(zl,"https://hexdocs.pm/bandit"),zl.forEach(o),Pr=r(Ko,"."),Ko.forEach(o),Ho=d(e),dt=n(e,"H1",{class:!0});var Gl=i(dt);gr=r(Gl,"License"),Gl.forEach(o),Io=d(e),ft=n(e,"P",{class:!0});var Yl=i(ft);xr=r(Yl,"MIT"),Yl.forEach(o),this.h()},h(){a(T,"name","twitter:card"),a(T,"content","summary"),a(P,"name","twitter:site"),a(P,"content","@evidence_dev"),zt(C.src,qt="https://github.com/mtrudel/bandit/raw/main/assets/readme_logo.png#gh-light-mode-only")||a(C,"src",qt),a(C,"alt","Bandit"),a(C,"class","markdown"),zt(B.src,Vo="https://github.com/mtrudel/bandit/raw/main/assets/readme_logo-darkmode.png#gh-dark-mode-only")||a(B,"src",Vo),a(B,"alt","Bandit"),a(B,"class","markdown"),a(w,"class","markdown"),zt(We.src,Ir="https://github.com/mtrudel/bandit/workflows/Elixir%20CI/badge.svg")||a(We,"src",Ir),a(We,"alt","Build Status"),a(We,"class","markdown"),a(S,"href","https://github.com/mtrudel/bandit/actions"),a(S,"rel","nofollow"),a(S,"class","markdown"),zt($e.src,Wr="https://img.shields.io/badge/api-docs-green.svg?style=flat")||a($e,"src",Wr),a($e,"alt","Docs"),a($e,"class","markdown"),a(K,"href","https://hexdocs.pm/bandit"),a(K,"rel","nofollow"),a(K,"class","markdown"),zt(Fe.src,$r="https://img.shields.io/hexpm/v/bandit.svg?style=flat&color=blue")||a(Fe,"src",$r),a(Fe,"alt","Hex.pm"),a(Fe,"class","markdown"),a(V,"href","https://hex.pm/packages/bandit"),a(V,"rel","nofollow"),a(V,"class","markdown"),a(f,"class","markdown"),a(Re,"class","markdown"),a(X,"href","https://github.com/mtrudel/thousand_island"),a(X,"rel","nofollow"),a(X,"class","markdown"),a(F,"class","markdown"),a(J,"href","https://github.com/mtrudel/bandit/actions/runs/4449308920"),a(J,"rel","nofollow"),a(J,"class","markdown"),a(R,"class","markdown"),a(Z,"href","https://github.com/summerwind/h2spec"),a(Z,"rel","nofollow"),a(Z,"class","markdown"),a(ee,"href","https://github.com/crossbario/autobahn-testsuite"),a(ee,"rel","nofollow"),a(ee,"class","markdown"),a(g,"class","markdown"),a(Me,"class","markdown"),a(De,"class","markdown"),a(ht,"class","markdown"),a(wt,"class","markdown"),a(bt,"class","markdown"),a(oe,"href","https://github.com/mtrudel/thousand_island"),a(oe,"rel","nofollow"),a(oe,"class","markdown"),a(te,"class","markdown"),a(b,"class","markdown"),a(Le,"class","markdown"),a(se,"href","https://github.com/phoenixframework/phoenix"),a(se,"rel","nofollow"),a(se,"class","markdown"),a(ae,"class","markdown"),a(re,"href","https://github.com/elixir-plug/plug"),a(re,"rel","nofollow"),a(re,"class","markdown"),a(Oe,"class","markdown"),a(le,"href","https://github.com/phoenixframework/websock"),a(le,"rel","nofollow"),a(le,"class","markdown"),a(je,"class","markdown"),a(ne,"href","https://datatracker.ietf.org/doc/html/rfc9112"),a(ne,"rel","nofollow"),a(ne,"class","markdown"),a(ie,"href","https://datatracker.ietf.org/doc/html/rfc9110"),a(ie,"rel","nofollow"),a(ie,"class","markdown"),a(M,"class","markdown"),a(ce,"href","https://datatracker.ietf.org/doc/html/rfc9113"),a(ce,"rel","nofollow"),a(ce,"class","markdown"),a(ue,"href","https://datatracker.ietf.org/doc/html/rfc9110"),a(ue,"rel","nofollow"),a(ue,"class","markdown"),a(pe,"href","https://github.com/summerwind/h2spec"),a(pe,"rel","nofollow"),a(pe,"class","markdown"),a(de,"href","https://datatracker.ietf.org/doc/html/rfc7540"),a(de,"rel","nofollow"),a(de,"class","markdown"),a(k,"class","markdown"),a(D,"href","https://www.rfc-editor.org/rfc/rfc9110.html#section-8.4.1.2"),a(D,"rel","nofollow"),a(D,"class","markdown"),a(qe,"class","markdown"),a(fe,"href","https://datatracker.ietf.org/doc/html/rfc6455"),a(fe,"rel","nofollow"),a(fe,"class","markdown"),a(me,"href","https://github.com/crossbario/autobahn-testsuite"),a(me,"rel","nofollow"),a(me,"class","markdown"),a(he,"href","https://datatracker.ietf.org/doc/html/rfc7692"),a(he,"rel","nofollow"),a(he,"class","markdown"),a(_,"class","markdown"),a(kt,"class","markdown"),a(m,"class","markdown"),a(we,"href","https://github.com/mtrudel/bandit/issues"),a(we,"rel","nofollow"),a(we,"class","markdown"),a(L,"class","markdown"),a(Ue,"class","markdown"),a(Ne,"class","markdown"),a(ze,"class","markdown"),a(yt,"class","markdown"),a(ke,"class","markdown"),a(be,"class","markdown"),a(vt,"class","markdown"),a(_t,"class","markdown"),a(H,"class","markdown"),a(ye,"class","markdown"),a(Tt,"class","markdown"),a(ve,"href","https://hexdocs.pm/bandit/Bandit.PhoenixAdapter.html"),a(ve,"rel","nofollow"),a(ve,"class","markdown"),a(I,"class","markdown"),a(Et,"class","markdown"),a(x,"class","markdown"),a(Qe,"class","markdown"),a(Pt,"class","markdown"),a(O,"class","markdown"),a(gt,"class","markdown"),a(j,"class","markdown"),a(Xe,"class","markdown"),a(xt,"class","markdown"),a(_e,"href","https://hexdocs.pm/bandit/Bandit.html#summary"),a(_e,"rel","nofollow"),a(_e,"class","markdown"),a(q,"class","markdown"),a(Je,"class","markdown"),a(Ze,"class","markdown"),a(tt,"class","markdown"),a(ot,"class","markdown"),a(Ee,"href","https://hexdocs.pm/websock/WebSock.html"),a(Ee,"rel","nofollow"),a(Ee,"class","markdown"),a(Te,"href","https://hexdocs.pm/websock_adapter/WebSockAdapter.html"),a(Te,"rel","nofollow"),a(Te,"class","markdown"),a(A,"class","markdown"),a(at,"class","markdown"),a(st,"href","lib/bandit/http1/README.md"),a(st,"class","markdown"),a(rt,"href","lib/bandit/http2/README.md"),a(rt,"class","markdown"),a(lt,"href","lib/bandit/websocket/README.md"),a(lt,"class","markdown"),a(y,"class","markdown"),a(nt,"href","lib/bandit/http1/README.md"),a(nt,"class","markdown"),a(U,"class","markdown"),a(it,"class","markdown"),a(ct,"class","markdown"),a(Pe,"href","https://github.com/mtrudel/bandit/blob/main/CODE_OF_CONDUCT.md"),a(Pe,"rel","nofollow"),a(Pe,"class","markdown"),a(N,"class","markdown"),a(ge,"href","https://github.com/mtrudel/bandit/blob/main/SECURITY.md"),a(ge,"rel","nofollow"),a(ge,"class","markdown"),a(z,"class","markdown"),a(ut,"class","markdown"),a(xe,"href","https://hex.pm/docs/publish"),a(xe,"rel","nofollow"),a(xe,"class","markdown"),a(At,"class","markdown"),a(Ct,"class","markdown"),a(v,"class","markdown"),a(Ae,"href","https://hexdocs.pm/bandit"),a(Ae,"rel","nofollow"),a(Ae,"class","markdown"),a(G,"class","markdown"),a(dt,"class","markdown"),a(ft,"class","markdown")},m(e,c){u(e,W,c),Ut.m(document.head,null),t(document.head,T),t(document.head,P),t(document.head,Q),u(e,$,c),u(e,w,c),t(w,C),t(w,mt),t(w,B),u(e,Ie,c),u(e,f,c),t(f,S),t(S,We),t(f,Xo),t(f,K),t(K,$e),t(f,Jo),t(f,V),t(V,Fe),u(e,Gt,c),u(e,Re,c),t(Re,Zo),u(e,Yt,c),u(e,F,c),t(F,ea),t(F,X),t(X,ta),t(F,oa),u(e,Qt,c),u(e,R,c),t(R,aa),t(R,J),t(J,sa),t(R,ra),u(e,Kt,c),u(e,g,c),t(g,la),t(g,Z),t(Z,na),t(g,ia),t(g,ee),t(ee,ca),t(g,ua),u(e,Vt,c),u(e,Me,c),t(Me,pa),u(e,Xt,c),u(e,De,c),t(De,da),u(e,Jt,c),u(e,b,c),t(b,ht),t(ht,fa),t(b,ma),t(b,wt),t(wt,ha),t(b,wa),t(b,bt),t(bt,ba),t(b,ka),t(b,te),t(te,ya),t(te,oe),t(oe,va),t(te,_a),u(e,Zt,c),u(e,Le,c),t(Le,Ea),u(e,eo,c),u(e,m,c),t(m,ae),t(ae,Ta),t(ae,se),t(se,Pa),t(ae,ga),t(m,xa),t(m,Oe),t(Oe,Aa),t(Oe,re),t(re,Ca),t(m,Ba),t(m,je),t(je,Sa),t(je,le),t(le,Ha),t(m,Ia),t(m,M),t(M,Wa),t(M,ne),t(ne,$a),t(M,Fa),t(M,ie),t(ie,Ra),t(m,Ma),t(m,k),t(k,Da),t(k,ce),t(ce,La),t(k,Oa),t(k,ue),t(ue,ja),t(k,qa),t(k,pe),t(pe,Ua),t(k,Na),t(k,de),t(de,za),t(m,Ga),t(m,qe),t(qe,Ya),t(qe,D),t(D,Qa),t(D,Ka),t(m,Va),t(m,_),t(_,Xa),t(_,fe),t(fe,Ja),t(_,Za),t(_,me),t(me,es),t(_,ts),t(_,he),t(he,os),t(_,as),t(m,ss),t(m,kt),t(kt,rs),u(e,to,c),u(e,L,c),t(L,ls),t(L,we),t(we,ns),t(L,is),u(e,oo,c),u(e,Ue,c),t(Ue,cs),u(e,ao,c),u(e,Ne,c),t(Ne,us),u(e,so,c),u(e,ze,c),t(ze,ps),u(e,ro,c),u(e,x,c),t(x,be),t(be,ke),t(ke,ds),t(ke,yt),t(yt,fs),t(ke,ms),t(be,hs),Mt(Ge,be,null),t(x,ws),t(x,ye),t(ye,H),t(H,bs),t(H,vt),t(vt,ks),t(H,ys),t(H,_t),t(_t,vs),t(H,_s),t(ye,Es),Mt(Ye,ye,null),t(x,Ts),t(x,Et),t(Et,I),t(I,Ps),t(I,Tt),t(Tt,gs),t(I,xs),t(I,ve),t(ve,As),t(I,Cs),u(e,lo,c),u(e,Qe,c),t(Qe,Bs),u(e,no,c),u(e,O,c),t(O,Ss),t(O,Pt),t(Pt,Hs),t(O,Is),u(e,io,c),Mt(Ke,e,c),u(e,co,c),u(e,j,c),t(j,Ws),t(j,gt),t(gt,$s),t(j,Fs),u(e,uo,c),Mt(Ve,e,c),u(e,po,c),u(e,Xe,c),t(Xe,Rs),u(e,fo,c),u(e,q,c),t(q,Ms),t(q,_e),t(_e,xt),t(xt,Ds),t(q,Ls),u(e,mo,c),u(e,Je,c),t(Je,Os),u(e,ho,c),u(e,Ze,c),t(Ze,js),u(e,wo,c),Mt(et,e,c),u(e,bo,c),u(e,tt,c),t(tt,qs),u(e,ko,c),u(e,ot,c),t(ot,Us),u(e,yo,c),u(e,A,c),t(A,Ns),t(A,Ee),t(Ee,zs),t(A,Gs),t(A,Te),t(Te,Ys),t(A,Qs),u(e,vo,c),u(e,at,c),t(at,Ks),u(e,_o,c),u(e,y,c),t(y,Vs),t(y,st),t(st,Xs),t(y,Js),t(y,rt),t(rt,Zs),t(y,er),t(y,lt),t(lt,tr),t(y,or),u(e,Eo,c),u(e,U,c),t(U,ar),t(U,nt),t(nt,sr),t(U,rr),u(e,To,c),u(e,it,c),t(it,lr),u(e,Po,c),u(e,ct,c),t(ct,nr),u(e,go,c),u(e,N,c),t(N,ir),t(N,Pe),t(Pe,cr),t(N,ur),u(e,xo,c),u(e,z,c),t(z,pr),t(z,ge),t(ge,dr),t(z,fr),u(e,Ao,c),u(e,ut,c),t(ut,mr),u(e,Co,c),u(e,v,c),t(v,hr),t(v,xe),t(xe,wr),t(v,br),t(v,At),t(At,kr),t(v,yr),t(v,Ct),t(Ct,vr),t(v,_r),u(e,Bo,c),Mt(pt,e,c),u(e,So,c),u(e,G,c),t(G,Er),t(G,Ae),t(Ae,Tr),t(G,Pr),u(e,Ho,c),u(e,dt,c),t(dt,gr),u(e,Io,c),u(e,ft,c),t(ft,xr),Wo=!0},p(e,[c]){Ut.p(e,c)},i(e){Wo||(Dt(Ge.$$.fragment,e),Dt(Ye.$$.fragment,e),Dt(Ke.$$.fragment,e),Dt(Ve.$$.fragment,e),Dt(et.$$.fragment,e),Dt(pt.$$.fragment,e),Wo=!0)},o(e){Lt(Ge.$$.fragment,e),Lt(Ye.$$.fragment,e),Lt(Ke.$$.fragment,e),Lt(Ve.$$.fragment,e),Lt(et.$$.fragment,e),Lt(pt.$$.fragment,e),Wo=!1},d(e){e&&o(W),Ut.d(e),o(T),o(P),o(Q),e&&o($),e&&o(w),e&&o(Ie),e&&o(f),e&&o(Gt),e&&o(Re),e&&o(Yt),e&&o(F),e&&o(Qt),e&&o(R),e&&o(Kt),e&&o(g),e&&o(Vt),e&&o(Me),e&&o(Xt),e&&o(De),e&&o(Jt),e&&o(b),e&&o(Zt),e&&o(Le),e&&o(eo),e&&o(m),e&&o(to),e&&o(L),e&&o(oo),e&&o(Ue),e&&o(ao),e&&o(Ne),e&&o(so),e&&o(ze),e&&o(ro),e&&o(x),Ot(Ge),Ot(Ye),e&&o(lo),e&&o(Qe),e&&o(no),e&&o(O),e&&o(io),Ot(Ke,e),e&&o(co),e&&o(j),e&&o(uo),Ot(Ve,e),e&&o(po),e&&o(Xe),e&&o(fo),e&&o(q),e&&o(mo),e&&o(Je),e&&o(ho),e&&o(Ze),e&&o(wo),Ot(et,e),e&&o(bo),e&&o(tt),e&&o(ko),e&&o(ot),e&&o(yo),e&&o(A),e&&o(vo),e&&o(at),e&&o(_o),e&&o(y),e&&o(Eo),e&&o(U),e&&o(To),e&&o(it),e&&o(Po),e&&o(ct),e&&o(go),e&&o(N),e&&o(xo),e&&o(z),e&&o(Ao),e&&o(ut),e&&o(Co),e&&o(v),e&&o(Bo),Ot(pt,e),e&&o(So),e&&o(G),e&&o(Ho),e&&o(dt),e&&o(Io),e&&o(ft)}}}function wn(E,W,T){var Ie;let P,Q;Kl(E,rn,f=>T(2,P=f)),Kl(E,Xl,f=>T(8,Q=f));let{data:$}=W,{data:w={},customFormattingSettings:C,__db:qt,inputs:mt}=$;an(Xl,Q="6666cd76f96956469e7be39d750cc7d9",Q);let B=cn(mt);return Vl(dn,B),sn(B.subscribe(f=>mt=f)),Vl(fn,{getCustomFormats:()=>C.customFormats||[]}),un((f,S)=>nn(qt.query,f,{query_name:S})),(Ie=import.meta)!=null&&Ie.hot&&(void 0).on("vite:afterUpdate",()=>{pn.emptyCache()}),P.params,E.$$set=f=>{"data"in f&&T(0,$=f.data)},E.$$.update=()=>{E.$$.dirty&1&&T(1,{data:w={},customFormattingSettings:C,__db:qt}=$,w),E.$$.dirty&2&&ln.set(Object.keys(w).length>0),E.$$.dirty&4&&P.params},[$,w,P]}class xn extends Zl{constructor(W){super(),en(this,W,wn,hn,tn,{data:0})}}export{xn as component};
